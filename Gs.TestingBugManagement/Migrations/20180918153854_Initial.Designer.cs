// <auto-generated />
using System;
using Gs.TestingBugManagement.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Gs.TestingBugManagement.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20180918153854_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.3-rtm-32065")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Gs.TestingBugManagement.Models.Bug", b =>
                {
                    b.Property<int>("BugID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BugState")
                        .IsRequired();

                    b.HasKey("BugID");

                    b.ToTable("Bug");
                });

            modelBuilder.Entity("Gs.TestingBugManagement.Models.BugManagement", b =>
                {
                    b.Property<int>("BugNumber")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AssignedTo")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<int>("BugID");

                    b.Property<DateTime>("CreateDate");

                    b.Property<int>("EnterpriseID");

                    b.Property<int>("EnvironmentID");

                    b.HasKey("BugNumber");

                    b.HasIndex("BugID");

                    b.HasIndex("EnterpriseID");

                    b.HasIndex("EnvironmentID");

                    b.ToTable("BugManagement");
                });

            modelBuilder.Entity("Gs.TestingBugManagement.Models.Enterprise", b =>
                {
                    b.Property<int>("EnterpriseID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EnterpriseType")
                        .IsRequired();

                    b.HasKey("EnterpriseID");

                    b.ToTable("Enterprise");
                });

            modelBuilder.Entity("Gs.TestingBugManagement.Models.Environment", b =>
                {
                    b.Property<int>("EnvironmentID")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("EnvironmentType")
                        .IsRequired();

                    b.HasKey("EnvironmentID");

                    b.ToTable("Environment");
                });

            modelBuilder.Entity("Gs.TestingBugManagement.Models.BugManagement", b =>
                {
                    b.HasOne("Gs.TestingBugManagement.Models.Bug", "Bug")
                        .WithMany("BugManagements")
                        .HasForeignKey("BugID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Gs.TestingBugManagement.Models.Enterprise", "Enterprise")
                        .WithMany("BugManagements")
                        .HasForeignKey("EnterpriseID")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("Gs.TestingBugManagement.Models.Environment", "Environment")
                        .WithMany("BugManagements")
                        .HasForeignKey("EnvironmentID")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
