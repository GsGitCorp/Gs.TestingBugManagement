@model IList<Gs.TestingBugManagement.Models.BugManagement>

@{
    ViewData["Title"] = "Index";
}

<div class="container" style="margin-top: 15px;">
    <div id="myCarousel" class="carousel slide" data-ride="carousel" data-interval="5000">
        <!-- Wrapper for slides -->
        <div class="carousel-inner">
            @if (Model != null)
            {
                int cantBySlider = 8;
                int sliders = (Model.Count / cantBySlider) + (Model.Count % cantBySlider != 0 ? 1 : 0);
                for (int i = 0, j = 0; i < sliders; i++)
                {
                    <div class="item @(i == 0 ? "active": "")">
                        @for (; j < (cantBySlider * (i + 1)) && j < Model.Count; j++)
                        {
                            <div class="col-sm-5 col-md-3">
                                <div class="thumbnail" style="background-color: rgba(255,255,255, 0.6);">
                                    <div style="display: table; width: 100%;">
                                        <div style="width:100%;height:21vh;background-color: rgba(82, 76, 136, 0.8);display: table-cell;vertical-align: middle;text-align:center;font-size: 32pt;">
                                            <p style="color:#fff;">
                                                @Html.DisplayFor(modelItem => Model[j].BugNumber)
                                            </p>
                                        </div>
                                    </div>
                                    <div class="caption">

                                        <p><font size="3">Assigned  :  @Html.DisplayFor(modelItem => Model[j].AssignedTo)</font></p>
                                        <p><font size="3">BugState  :  @Html.DisplayFor(modelItem => Model[j].Bug.BugState)</font></p>
                                        <p><font size="3">Enterprise:  @Html.DisplayFor(modelItem => Model[j].Enterprise.EnterpriseType)</font></p>
                                        <p><font size="3">Environment: @Html.DisplayFor(modelItem => Model[j].Environment.EnvironmentType)</font></p>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>
                }
            }
        </div>
    </div>
</div>

<script type="text/javascript">
    var timeout = setTimeout(function () { window.location.href = window.location.href; }, 60000);
</script>